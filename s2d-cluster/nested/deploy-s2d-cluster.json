{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "nodenames": {
      "type": "array",
      "metadata": {
        "description": "Array of server names given in Parameters, template loops through node names for resource creation"
      }
    },
    "clustername": {
      "type": "string"
    },
    "privateIPAddresses" : {
      "type" :"array"
    },
    "oupath": {
      "type": "string"
    },
    "domainName": {
      "type": "string",
      "metadata": {
        "description": "DNS domain name for existing Active Directory domain"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Name of the Administrator of the existing Active Directory Domain"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "minLength": 12,
      "metadata": {
        "description": "Password for the Administrator account of the existing Active Directory Domain"
      }
    },
    "localAdminPassword": {
      "type": "securestring"
    },
    "storageAccountType": {
      "type": "string",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "Type of new Storage Accounts (Standard_LRS, Standard_GRS, Standard_RAGRS or Premium_LRS) to be created to store VM disks"
      }
    },
    "nicSubnetUri": {
      "type": "string",
      "metadata": {
        "description": "Resource ID for existing vnet/subnet to which VM NICs should be attached"
      }
    },
    "vmSize": {
      "type": "string",
      "metadata": {
        "description": "Size of the S2D VMs to be created"
    }
    },
    "vmDiskSize": {
      "type": "int",
      "minValue": 128,
      "maxValue": 1023,
      "metadata": {
        "description": "Size of each data disk in GB on each S2D VM (Min=128, Max=1023)"
      }
    },
    "vmDiskCount": {
      "type": "int",
      "minValue": 2,
      "maxValue": 32,
      "metadata": {
        "description": "Number of data disks on each S2D VM (Min=2, Max=32). Ensure that the VM size you've selected will support this number of data disks."
      }
    },
    "sofsName": {
      "type": "string",
      "metadata": {
        "description": "Name of clustered Scale-Out File Server role"
      }
    },
    "shareName": {
      "type": "string",
      "metadata": {
        "description": "Name of shared data folder on clustered Scale-Out File Server role"
      }
    },
    "domainFQDN": {
      "type": "string",
      "metadata": {
        "description": "Domain FQDN"
      }
    },
    "userAccount": {
      "type": "string",
      "metadata": {
        "description": "Name of user/group account to be added as local administrator"
      }
    },
    "imageId": {
      "type": "string",
      "defaultValue": "/subscriptions/3129caf0-bff9-4c23-a15f-1be2a62b02b3/resourceGroups/EndUserRDMiNA-Images/providers/Microsoft.Compute/images/w2016-2018q2v1-eastus"
    },
    "_artifactsLocation": {
      "type": "string"
    },
    "_artifactsLocationSasToken": {
      "type": "string"
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    }
  },
  "variables": {
    "apiVersionStorage": "2016-01-01",
    "storageNamePrefix": "[skip(concat(toLower(parameters('nodenames')[0]),uniqueString(resourceGroup().id),'vm'),6)]",
    "witnessStorageName": "[skip(concat(toLower(parameters('nodenames')[0]),uniqueString(resourceGroup().id),'cw'),6)]",
    "witnessStorageType": "Standard_LRS",
    "vmAvailabilitySetName": "[concat(parameters('nodenames')[0],'as')]",
    "vmCount":"[length(parameters('nodenames'))]",
    "vmLoopTemplateURL": "[concat(parameters('_artifactsLocation'),'/nested/newVM.json',parameters('_artifactsLocationSasToken'))]",
    "s2dPrepModulesURL": "[concat(parameters('_artifactsLocation'),'/dsc/prep-s2d.ps1.zip',parameters('_artifactsLocationSasToken'))]",
    "s2dPrepFunction": "PrepS2D.ps1\\PrepS2D",
    "scriptURI": "[concat(parameters('_artifactsLocation'),'/Scripts/addLocalAdmin.ps1')]",
    "s2dConfigModulesURL": "[concat(parameters('_artifactsLocation'),'/dsc/config-s2d.ps1.zip',parameters('_artifactsLocationSasToken'))]",
    "s2dConfigFunction": "ConfigS2D.ps1\\ConfigS2D"
  },
  "resources": [
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('vmAvailabilitySetName')]",
      "apiVersion": "2017-03-30",
      "location": "[parameters('location')]",
      "properties": {
        "PlatformUpdateDomainCount": 3,
        "PlatformFaultDomainCount": 2
       },
       "sku": {
        "name": "Aligned"
       }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('witnessStorageName')]",
      "apiVersion": "2016-01-01",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[variables('witnessStorageType')]"
      },
      "kind": "Storage"
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[concat(variables('storageNamePrefix'),copyindex())]",
      "apiVersion": "2016-01-01",
      "copy": {
        "name": "storageAccountLoop",
        "count": "[variables('vmCount')]"
      },
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('storageAccountType')]"
      },
      "kind": "Storage"
    },
    {
      "name": "[concat(parameters('nodenames')[copyIndex()], '-nic')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[parameters('location')]",
      "apiVersion": "2015-06-15",
      "copy": {
        "name": "nicLoop",
        "count": "[variables('vmCount')]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('privateIPAddresses')[copyIndex()]]",
              "subnet": {
                "id": "[parameters('nicSubnetUri')]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "copy": {
        "name": "virtualMachineLoop",
        "count": "[variables('vmcount')]"
      },
      "name": "[concat(parameters('nodenames')[copyIndex()],'-newVM')]",
      "dependsOn": [
        "storageAccountLoop",
        "nicLoop",
        "[resourceId('Microsoft.Compute/availabilitySets', variables('vmAvailabilitySetName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vmLoopTemplateURL')]"
        },
        "parameters": {
          "vmName": {
            "value": "[concat(parameters('nodenames')[copyindex()])]"
          },
          "storageAccountUri": {
            "value": "[reference(concat('Microsoft.Storage/storageAccounts/',variables('StorageNamePrefix'),copyIndex()),variables('apiVersionStorage')).primaryEndpoints.blob]"
          },
          "vmAvailabilitySetName": {
            "value": "[variables('vmAvailabilitySetName')]"
          },
          "vmSize": {
            "value": "[parameters('vmSize')]"
          },
          "vmDiskCount": {
            "value": "[parameters('vmDiskCount')]"
          },
          "vmDiskSize": {
            "value": "[parameters('vmDiskSize')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "localAdminPassword": {
            "value": "[parameters('localAdminPassword')]"
          },
          "_artifactsLocation": {
            "value": "[parameters('_artifactsLocation')]"
          },
          "_artifactsLocationSasToken": {
            "value": "[parameters('_artifactsLocationSasToken')]"
          },
          "imageId": {
            "value": "[parameters('imageId')]"
          }
        }
      }
    },
    
    {
      "apiVersion": "2018-06-01",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('nodenames')[copyIndex()],'/domainjoin')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "virtualMachineLoop"
      ],
      "copy": {
        "name": "virtualMachineDomainLoop",
        "count": "[sub(variables('vmCount'),0)]"
      },
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "JsonADDomainExtension",
        "typeHandlerVersion": "1.3",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "Name": "[parameters('domainname')]",
          "OUPath": "[parameters('ouPath')]",
          "User": "[concat(parameters('domainname'), '\\', parameters('adminUsername'))]",
          "Restart": "true",
          "Options": "3",
          "NumberofRetries" : "3"
        },
        "protectedSettings": {
          "Password": "[parameters('adminPassword')]"
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('nodenames')[copyIndex()],'/s2dPrep')]",
      "apiVersion": "2018-06-01",
      "location": "[parameters('location')]",
      "dependsOn": [
        "virtualMachineLoop",
        "virtualMachineDomainLoop"
      ],
      "copy": {
        "name": "virtualMachineExtensionLoop",
        "count": "[sub(variables('vmCount'),0)]"
      },
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.76",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "modulesUrl": "[variables('s2dPrepModulesURL')]",
          "configurationFunction": "[variables('s2dPrepFunction')]",
          "properties": {
            "domainName": "[parameters('domainName')]",
            "adminCreds": {
              "userName": "[parameters('adminUsername')]",
              "password": "PrivateSettingsRef:adminPassword",
              "RetryCount": "5"
            }
          }
        },
        "protectedSettings": {
          "items": {
            "adminPassword": "[parameters('adminPassword')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('nodenames')[copyIndex()],'/addLocalAdmin')]",
      "apiVersion": "2018-06-01",
      "location": "[parameters('location')]",
      "dependsOn": [
        "virtualMachineLoop",
        "virtualMachineDomainLoop"
      ],
      "copy": {
        "name": "virtualMachineExtensionLoop",
        "count": "[sub(variables('vmCount'),0)]"
      },
      "tags": {
          "displayName": "script"
      },
      "properties": {
          "publisher": "Microsoft.Compute",
          "type": "CustomScriptExtension",
          "typeHandlerVersion": "1.8",
          "autoUpgradeMinorVersion": true,
          "settings": {
              "fileUris": [
                  "[variables('scriptURI')]"
              ],
              "commandToExecute": "[concat('powershell.exe -ExecutionPolicy Unrestricted -File addLocalAdmin.ps1',' -DomainFQDN \"', parameters('DomainFQDN'), '\"',' ',' -userAccount \"', parameters('userAccount'), '\"')]"
          }
      }
    }
  ],
  "outputs": {
    "sofsName": {
      "type": "string",
      "value": "[parameters('sofsName')]"
    },
    "shareName": {
      "type": "string",
      "value": "[parameters('shareName')]"
    }
  }
}
